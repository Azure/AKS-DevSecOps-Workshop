on:
  push:
    branches:
      - main
      - 'releases/**'
    paths:
    - 'tools/deploy/module4/**'
  workflow_dispatch:

env:
  TEST_AZURE_CONTAINER_REGISTRY: ${{ vars.TEST_AZURE_CONTAINER_REGISTRY }}}
  TEST_CONTAINER_NAME: ${{ vars.TEST_CONTAINER_NAME }}}
  TEST_RESOURCE_GROUP: ${{ vars.TEST_RESOURCE_GROUP }}}
  TEST_CLUSTER_NAME: ${{ vars.TEST_CLUSTER_NAME }}}
  TEST_DEPLOYMENT_MANIFEST_PATH: ${{ vars.TEST_DEPLOYMENT_MANIFEST_PATH }}}

  # name: Azure ARM
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  buildImage:
    name: Build Image
    environment: test
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.TEST_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.TEST_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.TEST_AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image 
          ${{ env.TEST_AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.TEST_CONTAINER_NAME }}:${{ github.sha }} 
          --registry ${{ env.TEST_AZURE_CONTAINER_REGISTRY }} -g ${{ env.TEST_RESOURCE_GROUP }} .

  # deploy:
  #   environment: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout source code 
  #       uses: actions/checkout@v3
  #     - name: Azure Login
  #       uses: azure/login@v1
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #     - name: Set AKS Context
  #       uses: azure/aks-set-context@v3
  #       with:
  #         resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP }}
  #         cluster-name: devsecops-aks
  #     - name: Setup kubectl
  #       id: install-kubectl
  #       uses: azure/setup-kubectl@v3
  #     - name: Deploy to AKS
  #       id: deploy-aks
  #       uses: Azure/k8s-deploy@v4
  #       with:
  #         namespace: 'default'
  #         manifests: |
  #            azure-vote-all-in-one-redis.yaml
  #         images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'
  #         pull-images: false 